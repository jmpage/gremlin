# ---
- name: Create a temporary directory for emacs
  register: temp_dir
  ansible.builtin.tempfile:
    state: directory
    prefix: emacs

- name: Retrieve latest build
  register: latest_build_url
  shell: "curl -s https://emacsformacosx.com/download/emacs-builds/ | grep -E '\"Emacs-[0-9\\.\\-]+-universal.dmg\"' | sed -re 's/.*\"(Emacs-[0-9\\.\\-]+-universal.dmg)\".*([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\\2 \\1/g' | sort -nr | head -1 | sed 's/^[0-9\\-]* //g'"

- name: Download latest release
  ansible.builtin.get_url:
    url: "https://emacsformacosx.com/emacs-builds/{{ latest_build_url.stdout }}"
    dest: "{{ temp_dir.path }}/emacs.dmg"

- name: Generate mtree for existing emacs
  register: mtree
  shell: "mtree -c -K sha256digest -p /Applications/Emacs.app > {{ temp_dir.path }}.mtree"
  # status 1 = error occurred (e.g. path does not exist)
  failed_when: mtree.rc > 1

- name: Mount emacs.dmg
  command:
    cmd: "hdiutil attach {{ temp_dir.path }}/emacs.dmg"

- name: Verify Emacs.app signature
  register: codesign
  command:
    cmd: "codesign -dvv /Volumes/Emacs/Emacs.app"
  failed_when: "'Authority=Developer ID Application: Galvanix (5BRAQAFB8B)' not in codesign.stderr"

- name: Compare mtree w/ new Emacs.app
  register: mtree_compare
  shell: "mtree -p /Volumes/Emacs/Emacs.app < {{ temp_dir.path }}.mtree"
  # only when we generated an mtree, i.e. the destination already exists
  when: mtree.rc == 0
  # status 0 = success, 2 = hierarchy does not match
  failed_when: mtree_compare.rc != 0 and mtree_compare.rc != 2

- name: Remove existing Emacs.app
  become: yes
  become_method: sudo
  ansible.builtin.file:
    path: /Applications/Emacs.app
    state: absent
  # only when destination exists and does not match source
  when: mtree.rc == 0 and mtree_compare.rc == 2

- name: Copy Emacs.app to Applications
  become: yes
  become_method: sudo
  command: "cp -Rf /Volumes/Emacs/Emacs.app /Applications/"
  # only when destination didn't exist or did not match source
  when: mtree.rc == 1 or mtree_compare.rc == 2

- name: Unmount emacs.dmg
  command:
    cmd: "hdiutil unmount /Volumes/Emacs"

- name: Cleanup temporary directory
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent

- name: Symlink emacs binary
  become: yes
  become_method: sudo
  ansible.builtin.file:
    src: /Applications/Emacs.app/Contents/MacOS/Emacs
    dest: /usr/local/bin/emacs
    state: link

- name: Symlink emacsclient binary
  become: yes
  become_method: sudo
  ansible.builtin.file:
    src: /Applications/Emacs.app/Contents/MacOS/bin/emacsclient
    dest: /usr/local/bin/emacsclient
    state: link

# TODO: Drop emacs shortcut in dock
